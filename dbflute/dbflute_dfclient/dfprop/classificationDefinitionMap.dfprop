# /---------------------------------------------------------------------------
# classificationDefinitionMap: (NotRequired - Default map:{})
#
# The definition of classification.
#
# Specification:
# map: {
#     [classification-name] = list:{
#         ; map:{
#             ; topComment=[comment]; codeType=[String(default) or Number or Boolean]}
#             ; isCheckImplicitSet=[true or false(default)]
#             ; isUseDocumentOnly=[true or false(default)]
#             ; isSuppressAutoDeploy=[true or false(default)]
#             ; groupingMap = map:{
#                 ; [group-name] = map:{
#                     ; groupComment=[comment]
#                     ; elementList=list:{[the list of classification element's name]}
#                 }
#             }
#         }
#         # classification elements for implicit classification
#         ; map:{
#             ; code=[code]; name=[name]; alias=[alias]; comment=[comment]
#             ; sisterCode=[code or code-list]; subItemMap=map:{[free-map]}
#         }
#         # settings for table classification
#         ; map:{
#             ; table=[table-name]
#             ; code=[column-name for code]; name=[column-name for name]
#             ; alias=[column-name for alias]; comment=[column-name for comment]}
#             ; where=[condition for select]; orderBy=[column-name for ordering]
#             ; exceptCodeList=[the list of except code]
#         }
#     }
# }
#
# *The line that starts with '#' means comment-out.
#
map:{
    # example for implicit classification
    #; Flg = list:{
    #    ; map:{topComment=general boolean classification for every flg-column; codeType=Number}
    #    ; map:{code=1; name=True ; alias=Checked  ; comment=means yes; sisterCode=true}
    #    ; map:{code=0; name=False; alias=Unchecked; comment=means no ; sisterCode=false}
    #}
    # example for table classification
    #; MemberStatus = list:{
    #    ; map:{topComment=status of member from entry to withdrawal; codeType=String}
    #    ; map:{
    #        ; table=MEMBER_STATUS
    #        ; code=MEMBER_STATUS_CODE; name=MEMBER_STATUS_NAME
    #        ; comment=DESCRIPTION; orderBy=DISPLAY_ORDER
    #    }
    #}

    ; メニュー区分 = list:{ 
        ; map:{
            ; topComment=メニュー区分
            ; codeType=String
        }
        ; map:{
            ; table=kbnメニュー区分
            ; code=メニューコード
            ; name=メニュー名称
            ; alias=メニュー名称
            ; comment=優先順位
            ; orderBy=メニューコード
        }
    }
    ; 職位区分 = list:{
        ; map:{
            ; topComment=職位区分
            ; codeType=String
        }
        ; map:{
            ; table=kbn職位区分
            ; code=職位コード
            ; name=職位名称
            ; alias=職位名称
            ; comment=職位英字名称
            ; orderBy=職位コード
        }
    }
    ; 客室利用区分 = list:{
        ; map:{
            ; topComment=客室利用区分
            ; codeType=String
        }
        ; map:{
            ; table=kbn客室利用区分
            ; code=客室利用コード
            ; name=客室利用名称
            ; alias=客室利用名称
            ; orderBy=客室利用コード
        }
    }
}
# ----------------/